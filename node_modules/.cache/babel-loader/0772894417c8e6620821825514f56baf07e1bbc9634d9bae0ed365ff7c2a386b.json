{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\Meme-Generator\\\\my-app\\\\src\\\\components\\\\Meme.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"http://i.imgflip.com/1bij.jpg\"\n  });\n  const [allMemes, setAllMemes] = React.useState([]);\n  React.useEffect(() => {\n    async function getMemes() {\n      const res = await fetch(\"https://api.imgflip.com/get_memes\");\n      const data = await res.json();\n      setAllMemes(data.data.memes);\n    }\n    getMemes();\n  }, []);\n  function getMemeImage() {\n    const randomNumber = Math.floor(Math.random() * allMemes.length);\n    const url = allMemes[randomNumber].url;\n    setMeme(prevMeme => ({\n      ...prevMeme,\n      randomImage: url\n    }));\n  }\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setMeme(prevMeme => ({\n      ...prevMeme,\n      [name]: value\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Top text\",\n        className: \"form--input\",\n        name: \"topText\",\n        value: meme.topText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Bottom text\",\n        className: \"form--input\",\n        name: \"bottomText\",\n        value: meme.bottomText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form--button\",\n        onClick: getMemeImage,\n        children: \"Get a new meme image \\uD83D\\uDDBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.randomImage,\n        className: \"meme--image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text top\",\n        children: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text bottom\",\n        children: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Meme, \"V/zFIGuHS9qWH27rPvyxUl6krkM=\");\n_c = Meme;\nvar _c;\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Meme","_s","meme","setMeme","useState","topText","bottomText","randomImage","allMemes","setAllMemes","useEffect","getMemes","res","fetch","data","json","memes","getMemeImage","randomNumber","Math","floor","random","length","url","prevMeme","handleChange","event","name","value","target","children","className","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/GitHub/Meme-Generator/my-app/src/components/Meme.js"],"sourcesContent":["import React from \"react\";\r\n\r\nexport default function Meme() {\r\n  const [meme, setMeme] = React.useState({\r\n    topText: \"\",\r\n    bottomText: \"\",\r\n    randomImage: \"http://i.imgflip.com/1bij.jpg\",\r\n  });\r\n  const [allMemes, setAllMemes] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    async function getMemes() {\r\n      const res = await fetch(\"https://api.imgflip.com/get_memes\");\r\n      const data = await res.json();\r\n      setAllMemes(data.data.memes);\r\n    }\r\n    getMemes();\r\n  }, []);\r\n\r\n  function getMemeImage() {\r\n    const randomNumber = Math.floor(Math.random() * allMemes.length);\r\n    const url = allMemes[randomNumber].url;\r\n    setMeme((prevMeme) => ({\r\n      ...prevMeme,\r\n      randomImage: url,\r\n    }));\r\n  }\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    setMeme((prevMeme) => ({\r\n      ...prevMeme,\r\n      [name]: value,\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Top text\"\r\n          className=\"form--input\"\r\n          name=\"topText\"\r\n          value={meme.topText}\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Bottom text\"\r\n          className=\"form--input\"\r\n          name=\"bottomText\"\r\n          value={meme.bottomText}\r\n          onChange={handleChange}\r\n        />\r\n        <button className=\"form--button\" onClick={getMemeImage}>\r\n          Get a new meme image ðŸ–¼\r\n        </button>\r\n      </div>\r\n      <div className=\"meme\">\r\n        <img src={meme.randomImage} className=\"meme--image\" />\r\n        <h2 className=\"meme--text top\">{meme.topText}</h2>\r\n        <h2 className=\"meme--text bottom\">{meme.bottomText}</h2>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}